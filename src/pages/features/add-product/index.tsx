import { api } from "~/utils/api";
import { NextPage } from "next";
import Head from "next/head";
import { useFormik } from "formik";
import { useRouter } from "next/router";
import { useState } from "react";

interface FormValues {
  name: string;
  description: string;
  price: string;
  image: File | null;
}

const AddProduct: NextPage = () => {
  const createProduct = api.product.create.useMutation();
  const router = useRouter();

  const formik = useFormik<FormValues>({
    initialValues: {
      name: "",
      description: "",
      price: "",
      image: null,
    },
    onSubmit: (values: FormValues) => {
      console.log(values);
      createProduct
        .mutateAsync({
          ...values,
          price: parseInt(values.price),
        })
        .then(() => {
          router.push("/");
        });
    },
  });

  const labels = [1, 2, 3, 4, 5];

  const [selectedImages, setSelectedImages] = useState<Array<string>>([]);

  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>, index: number) => {
    if (event.currentTarget.files && event.currentTarget.files[0]) {
      const file = event.currentTarget.files[0];
      const image = URL.createObjectURL(file);

      setSelectedImages((previousImages) => {
        const updatedImages = [...previousImages];
        updatedImages[index] = image;
        return updatedImages;
      });
    }
  };

  return (
    <>
      <Head>
        <title>Add Product</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="max-w-4xl mx-auto container">
        <form onSubmit={formik.handleSubmit} className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
          <div className="mb-4">
            <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="name">
              Name
            </label>
            <input
              className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              id="name"
              type="name"
              name="name"
              placeholder="Enter name"
              value={formik.values.name}
              onChange={formik.handleChange}
            />
          </div>
          <div className="mb-4">
            <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="description">
              Description
            </label>
            <textarea
              className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              id="description"
              name="description"
              value={formik.values.description}
              placeholder="Description"
              onChange={formik.handleChange}
            />
          </div>
          <div className="mb-4">
            <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="price">
              Price
            </label>
            <input
              className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              id="price"
              type="price"
              name="price"
              value={formik.values.price}
              placeholder="Enter price"
              onChange={formik.handleChange}
            />
          </div>
          <div className="mb-4">
            <label className="block text-gray-700 text-sm font-bold mb-2">Image</label>
            <div className="flex flex-wrap">
              {labels.map((label, index) => (
                <label
                  key={index}
                  htmlFor={`dropzone-file-${index}`}
                  className={`flex items-center justify-center w-24 h-24 border-2 ${
                    selectedImages[index] ? "border-solid" : "border-dashed"
                  } rounded-lg cursor-pointer mx-2 my-2`}
                >
                  {selectedImages[index] ? (
                    <img src={selectedImages[index]} alt="upload" className="object-cover w-20 h-20" />
                  ) : (
                    <svg
                      className="w-8 h-8 text-gray-500 dark:text-gray-400"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 20 16"
                    >
                      <path
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="2"
                        d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"
                      />
                    </svg>
                  )}
                  <input
                    id={`dropzone-file-${index}`}
                    type="file"
                    className="hidden"
                    accept="image/*"
                    onChange={(event) => handleImageChange(event, index)}
                  />
                </label>
              ))}
            </div>
          </div>
          <div className="flex items-center justify-end">
            <button
              className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
              type="submit"
            >
              Add Product
            </button>
          </div>
        </form>
      </div>
    </>
  );
};

export default AddProduct;

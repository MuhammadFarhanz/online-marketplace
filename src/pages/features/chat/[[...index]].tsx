
import { useFormik } from "formik";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { useGetProductById } from "~/pages/hooks/useGetProductById";
import { api } from "~/utils/api";

const Chat: NextPage = () => {
  const createMessage = api.message.sendMessage.useMutation()
  const listing = useGetProductById()
  const listingData = listing?.data

//   console.log(listingData?.userId)
  interface Message {
    message: string,
  }
  const formik = useFormik<Message>({
    initialValues: {
      message: '',
    },
    onSubmit: async (values: Message,{ resetForm }) => {
      if (listingData?.id) {
        await createMessage.mutateAsync({
          message: values.message,
          listingId: listingData.id,
          // toUser: listingData.userId,
        });
      } else {
        await createMessage.mutateAsync({
          message: values.message,
          listingId: '',
          // toUser: '',
        });
        console.log('listingItem.id does not exist');
        // Handle the case when listingItem.id does not exist
      }
      resetForm()
    },
  });
  
  function Card () {
    return (
     <>
      <div className="bg-blue-400">
        <p>{listingData?.name}</p>

      </div>
     </>
    )
  }

  return (
    <>
      <Head>
        <title>chat</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex min-h-screen flex-col">
        <h1 className="text-4xl text-white m-4 ml-0">chat</h1>
      <div className="bg-blue-400 flex h-[80vh] ">
        <div className="bg-red-300 w-1/3"></div>
        <div className="bg-green-300 w-full relative">select user to start a chat
          {listingData && <Card/>}
            <form onSubmit={formik.handleSubmit}
          className="bg-transparent shadow-md rounded px-8 pt-6 pb-6 absolute bottom-0 w-full">
            <div className="flex">
              {/* <label
                className="block text-gray-700 text-sm font-bold mb-2"
                htmlFor="message"
              >
              </label> */}
              <input
                className="shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                id="message"
                name="message"
                placeholder="Enter name"
                value={formik.values.message}
                onChange={formik.handleChange}
              />
        
              <button
                className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-2 ml-2 rounded-full focus:outline-none focus:shadow-outline"
                type="submit"
              >
               <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
                <path strokeLinecap="round" strokeLinejoin="round" d="M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5" />
              </svg>

              </button>
            </div>
          </form>
        </div>
      </div>
      </main>
    </>
  );
};

export default Chat;

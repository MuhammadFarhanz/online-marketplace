import { api } from "~/utils/api";
import { type NextPage } from "next";
import Head from "next/head";
import { useFormik } from 'formik'
import { useRouter } from "next/router";
import Navbar from "../components/Navbar";

interface FormValues {
  name: string,
  description : string,
  price: string
}

const AddProduct: NextPage = () => {
  const createProduct = api.product.createProduct.useMutation()
  const router = useRouter()

  const formik = useFormik<FormValues>({
    initialValues: {
        name: '',
        description: '',
        price: '',
      },
      onSubmit: (values:FormValues) => {
        createProduct
        .mutateAsync({
          ...values,
          price: parseInt(values.price),
        })
        .then(() => {
          router.push("/")
        })

      },
  })


  return (
    <>
      <Head>
        <title>add product</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar/>
      <div className="max-w-md mx-auto">
      <form onSubmit={formik.handleSubmit}
      className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
        <div className="mb-4">
          <label
            className="block text-gray-700 text-sm font-bold mb-2"
            htmlFor="name"
          >
            Name
          </label>
          <input
            className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="name"
            type="name"
            name="name"
            placeholder="Enter name"
            value={formik.values.name}
            onChange={formik.handleChange}
          />
        </div>
        <div className="mb-4">
          <label
            className="block text-gray-700 text-sm font-bold mb-2"
            htmlFor="name"
          >
            description
          </label>
          <textarea
            className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="name"
       
            name="description"
            value={formik.values.description}
            placeholder="description"
            onChange={formik.handleChange}
          />
        </div>
        <div className="mb-4">
          <label
            className="block text-gray-700 text-sm font-bold mb-2"
            htmlFor="price"
          >
            Price
          </label>
          <input
            className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="price"
            type="price"
            name="price"
            value={formik.values.price}
            placeholder="Enter price"
            onChange={formik.handleChange}
          />
        </div>
        <div className="flex items-center justify-end">
          <button
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            type="submit"
          >
            Add Product
          </button>
        </div>
      </form>
    </div>
    </>
  );
};

export default AddProduct;